{"ast":null,"code":"var _jsxFileName = \"/Users/connorpuhala/Code/django-project-2/project2/src/App.js\";\n//import logo from './logo.svg';\nimport React, { Component } from \"react\";\nimport { Button, Card, Header, Transition, Image } from 'semantic-ui-react';\nimport './App.css';\nimport baguette from './images/baguettecard.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass StepTimer extends React.Component {\n  constructor(props) {\n    super(props);\n    this.timer = 0;\n    this.state = {\n      time: new Date(),\n      isRunning: false,\n      alarmChecked: false\n    };\n  }\n\n  componentWillMount() {\n    // set up timer\n    this.timer = setTimeout(() => {\n      this.setState({\n        time: new Date()\n      });\n      this.componentWillMount();\n    }, Math.floor(Date.now() / 1000) * 1000 + 1000 - Date.now());\n  }\n\n  componentWillUnmount() {\n    // remove timer\n    clearTimeout(this.timer);\n  }\n\n  msToTime(duration) {\n    var milliseconds = parseInt(duration % 1000 / 100),\n        seconds = Math.floor(duration / 1000 % 60),\n        minutes = Math.floor(duration / (1000 * 60) % 60),\n        hours = Math.floor(duration / (1000 * 60 * 60) % 24);\n    hours = hours < 10 ? \"0\" + hours : hours;\n    minutes = minutes < 10 ? \"0\" + minutes : minutes;\n    seconds = seconds < 10 ? \"0\" + seconds : seconds;\n    return \"Step Timer: \" + hours + \":\" + minutes + \":\" + seconds;\n  }\n\n  render() {\n    console.log(this.props.startTime);\n    console.log(this.props.nextStepTime);\n    console.log(this.state.time.getTime());\n    let timeLeft = this.props.startTime + this.props.nextStepTime; // if ((timeLeft - this.state.time) <= 0){\n    //   alert('TIME UP');\n    // }\n\n    if (timeLeft - this.state.time > 0 && this.state.isRunning == false) {\n      this.setState({\n        isRunning: true\n      });\n    }\n\n    if (timeLeft - this.state.time <= 0 && this.state.isRunning == true && this.state.alarmChecked) {\n      alert('Time up');\n      this.setState({\n        isRunning: false\n      });\n    }\n\n    if (timeLeft - this.state.time > 0) {\n      return this.msToTime(timeLeft - this.state.time);\n    } else {\n      return 'Ready';\n    }\n  }\n\n}\n\nclass Task extends React.Component {\n  constructor(props) {\n    super(props); //this.handleCheck = this.handleCheck.bind(this);\n  } // handleCheck(theStepNumber) {\n  //   if (theStepNumber == 2) {\n  //     console.log('step 2 bishhh');\n  //   }\n  // }\n\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"ui checkbox\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"checkbox\",\n        checked: this.props.checkOn,\n        onClick: () => this.props.onPressChild(this.props.numberStep)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [this.props.stepTime, \" - \", this.props.text]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"extra\",\n        children: this.props.timeInfo\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nclass Time extends React.Component {\n  constructor(props) {\n    super(props);\n    this.timer = 0;\n    this.state = {\n      time: new Date()\n    };\n  }\n\n  componentWillMount() {\n    // set up timer\n    this.timer = setTimeout(() => {\n      this.setState({\n        time: new Date()\n      });\n      this.componentWillMount();\n    }, Math.floor(Date.now() / 1000) * 1000 + 1000 - Date.now());\n  }\n\n  componentWillUnmount() {\n    // remove timer\n    clearTimeout(this.timer);\n  }\n\n  render() {\n    // render the current time\n    return this.state.time.toLocaleTimeString([], {\n      hour: '2-digit',\n      minute: '2-digit'\n    });\n  }\n\n}\n\nclass TimerWindow extends Component {\n  constructor(props) {\n    super(props);\n\n    this.onPress = stepNumber => {\n      let rightNowOG = new Date();\n      rightNowOG.setTime(Date.now());\n\n      if (stepNumber == 0) {\n        this.setState({\n          nextStepTime: 600000\n        });\n      } else if (stepNumber == 1) {\n        this.setState({\n          nextStepTime: 3600000\n        });\n      } else if (stepNumber == 2) {\n        this.setState({\n          nextStepTime: 43200000\n        });\n      } else if (stepNumber == 3) {\n        this.setState({\n          nextStepTime: 3600000\n        });\n      } else if (stepNumber == 4) {\n        this.setState({\n          nextStepTime: 600000\n        });\n      } else if (stepNumber == 5) {\n        this.setState({\n          nextStepTime: 10800000\n        });\n      } else if (stepNumber == 6) {\n        this.setState({\n          nextStepTime: 360000\n        });\n      } else if (stepNumber == 7) {\n        this.setState({\n          nextStepTime: 1800000\n        });\n      } else if (stepNumber == 8) {\n        this.setState({\n          nextStepTime: 600000\n        });\n      } else if (stepNumber >= 9) {\n        this.setState({\n          nextStepTime: 0\n        });\n      }\n\n      this.setState({\n        transitionIn: 500,\n        transitionOut: 0\n      });\n      this.setState({\n        cardVisible: true\n      });\n      this.updateAllTimes(rightNowOG, stepNumber);\n    };\n\n    this.state = {\n      currentTime: /*#__PURE__*/_jsxDEV(Time, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 20\n      }, this),\n      mixTime: '',\n      roomTempTime: '',\n      coldRiseTime: '',\n      bringRoomTempTime: '',\n      moreIngredientsTime: '',\n      riseRoomTempTime: '',\n      proofTime: '',\n      bakeTime: '',\n      coolTime: '',\n      doneTime: '',\n      step1CheckOn: false,\n      step2CheckOn: false,\n      step3CheckOn: false,\n      step4CheckOn: false,\n      step5CheckOn: false,\n      step6CheckOn: false,\n      step7CheckOn: false,\n      step8CheckOn: false,\n      step9CheckOn: false,\n      step10CheckOn: false,\n      nextStepTime: '',\n      cardVisible: false,\n      alarmChecked: false,\n      transitionIn: 500,\n      transitionOut: 0\n    };\n    this.onPress = this.onPress.bind(this);\n  }\n\n  isAlarmChecked() {// something\n  }\n\n  updateAllTimes(rightNow, stepNumber) {\n    if (stepNumber == 0) {\n      this.setState({\n        mixTime: 'Now'\n      });\n      this.setState({\n        step1CheckOn: false\n      });\n      rightNow.setTime(rightNow.getTime() + 600000);\n      this.setState({\n        roomTempTime: rightNow.toLocaleTimeString([], {\n          hour: '2-digit',\n          minute: '2-digit'\n        })\n      });\n      this.setState({\n        step2CheckOn: false\n      });\n      rightNow.setTime(rightNow.getTime() + 3600000);\n      this.setState({\n        coldRiseTime: rightNow.toLocaleTimeString([], {\n          hour: '2-digit',\n          minute: '2-digit'\n        })\n      });\n      this.setState({\n        step3CheckOn: false\n      });\n      rightNow.setTime(rightNow.getTime() + 43200000);\n      this.setState({\n        bringRoomTempTime: rightNow.toLocaleTimeString([], {\n          hour: '2-digit',\n          minute: '2-digit'\n        })\n      });\n      this.setState({\n        step4CheckOn: false\n      });\n      rightNow.setTime(rightNow.getTime() + 3600000);\n      this.setState({\n        moreIngredientsTime: rightNow.toLocaleTimeString([], {\n          hour: '2-digit',\n          minute: '2-digit'\n        })\n      });\n      this.setState({\n        step5CheckOn: false\n      });\n      rightNow.setTime(rightNow.getTime() + 600000);\n      this.setState({\n        riseRoomTempTime: rightNow.toLocaleTimeString([], {\n          hour: '2-digit',\n          minute: '2-digit'\n        })\n      });\n      this.setState({\n        step6CheckOn: false\n      });\n      rightNow.setTime(rightNow.getTime() + 10800000);\n      this.setState({\n        proofTime: rightNow.toLocaleTimeString([], {\n          hour: '2-digit',\n          minute: '2-digit'\n        })\n      });\n      this.setState({\n        step7CheckOn: false\n      });\n      rightNow.setTime(rightNow.getTime() + 3600000);\n      this.setState({\n        bakeTime: rightNow.toLocaleTimeString([], {\n          hour: '2-digit',\n          minute: '2-digit'\n        })\n      });\n      this.setState({\n        step8CheckOn: false\n      });\n      rightNow.setTime(rightNow.getTime() + 1800000);\n      this.setState({\n        coolTime: rightNow.toLocaleTimeString([], {\n          hour: '2-digit',\n          minute: '2-digit'\n        })\n      });\n      this.setState({\n        step9CheckOn: false\n      });\n      rightNow.setTime(rightNow.getTime() + 600000);\n      this.setState({\n        doneTime: rightNow.toLocaleTimeString([], {\n          hour: '2-digit',\n          minute: '2-digit'\n        })\n      });\n      this.setState({\n        step10CheckOn: false\n      });\n    } else if (stepNumber == 1) {\n      this.setState({\n        mixTime: 'Done'\n      });\n      this.setState({\n        step1CheckOn: true\n      });\n      this.setState({\n        roomTempTime: 'Now'\n      });\n      this.setState({\n        step2CheckOn: false\n      });\n      rightNow.setTime(rightNow.getTime() + 3600000);\n      this.setState({\n        coldRiseTime: rightNow.toLocaleTimeString([], {\n          hour: '2-digit',\n          minute: '2-digit'\n        })\n      });\n      this.setState({\n        step3CheckOn: false\n      });\n      rightNow.setTime(rightNow.getTime() + 43200000);\n      this.setState({\n        bringRoomTempTime: rightNow.toLocaleTimeString([], {\n          hour: '2-digit',\n          minute: '2-digit'\n        })\n      });\n      this.setState({\n        step4CheckOn: false\n      });\n      rightNow.setTime(rightNow.getTime() + 3600000);\n      this.setState({\n        moreIngredientsTime: rightNow.toLocaleTimeString([], {\n          hour: '2-digit',\n          minute: '2-digit'\n        })\n      });\n      this.setState({\n        step5CheckOn: false\n      });\n      rightNow.setTime(rightNow.getTime() + 600000);\n      this.setState({\n        riseRoomTempTime: rightNow.toLocaleTimeString([], {\n          hour: '2-digit',\n          minute: '2-digit'\n        })\n      });\n      this.setState({\n        step6CheckOn: false\n      });\n      rightNow.setTime(rightNow.getTime() + 10800000);\n      this.setState({\n        proofTime: rightNow.toLocaleTimeString([], {\n          hour: '2-digit',\n          minute: '2-digit'\n        })\n      });\n      this.setState({\n        step7CheckOn: false\n      });\n      rightNow.setTime(rightNow.getTime() + 3600000);\n      this.setState({\n        bakeTime: rightNow.toLocaleTimeString([], {\n          hour: '2-digit',\n          minute: '2-digit'\n        })\n      });\n      this.setState({\n        step8CheckOn: false\n      });\n      rightNow.setTime(rightNow.getTime() + 1800000);\n      this.setState({\n        coolTime: rightNow.toLocaleTimeString([], {\n          hour: '2-digit',\n          minute: '2-digit'\n        })\n      });\n      this.setState({\n        step9CheckOn: false\n      });\n      rightNow.setTime(rightNow.getTime() + 600000);\n      this.setState({\n        doneTime: rightNow.toLocaleTimeString([], {\n          hour: '2-digit',\n          minute: '2-digit'\n        })\n      });\n      this.setState({\n        step10CheckOn: false\n      });\n    } else if (stepNumber == 2) {\n      this.setState({\n        mixTime: 'Done'\n      });\n      this.setState({\n        step1CheckOn: true\n      });\n      this.setState({\n        roomTempTime: 'Done'\n      });\n      this.setState({\n        step2CheckOn: true\n      });\n      this.setState({\n        coldRiseTime: 'Now'\n      });\n      this.setState({\n        step3CheckOn: false\n      }); //console.log(rightNow.toLocaleTimeString([], {hour: '2-digit', minute:'2-digit'}))\n\n      rightNow.setTime(rightNow.getTime() + 43200000);\n      this.setState({\n        bringRoomTempTime: rightNow.toLocaleTimeString([], {\n          hour: '2-digit',\n          minute: '2-digit'\n        })\n      });\n      this.setState({\n        step4CheckOn: false\n      });\n      rightNow.setTime(rightNow.getTime() + 3600000);\n      this.setState({\n        moreIngredientsTime: rightNow.toLocaleTimeString([], {\n          hour: '2-digit',\n          minute: '2-digit'\n        })\n      });\n      this.setState({\n        step5CheckOn: false\n      });\n      rightNow.setTime(rightNow.getTime() + 600000);\n      this.setState({\n        riseRoomTempTime: rightNow.toLocaleTimeString([], {\n          hour: '2-digit',\n          minute: '2-digit'\n        })\n      });\n      this.setState({\n        step6CheckOn: false\n      });\n      rightNow.setTime(rightNow.getTime() + 10800000);\n      this.setState({\n        proofTime: rightNow.toLocaleTimeString([], {\n          hour: '2-digit',\n          minute: '2-digit'\n        })\n      });\n      this.setState({\n        step7CheckOn: false\n      });\n      rightNow.setTime(rightNow.getTime() + 3600000);\n      this.setState({\n        bakeTime: rightNow.toLocaleTimeString([], {\n          hour: '2-digit',\n          minute: '2-digit'\n        })\n      });\n      this.setState({\n        step8CheckOn: false\n      });\n      rightNow.setTime(rightNow.getTime() + 1800000);\n      this.setState({\n        coolTime: rightNow.toLocaleTimeString([], {\n          hour: '2-digit',\n          minute: '2-digit'\n        })\n      });\n      this.setState({\n        step9CheckOn: false\n      });\n      rightNow.setTime(rightNow.getTime() + 600000);\n      this.setState({\n        doneTime: rightNow.toLocaleTimeString([], {\n          hour: '2-digit',\n          minute: '2-digit'\n        })\n      });\n      this.setState({\n        step10CheckOn: false\n      });\n    } else if (stepNumber == 3) {\n      this.setState({\n        mixTime: 'Done'\n      });\n      this.setState({\n        step1CheckOn: true\n      });\n      this.setState({\n        roomTempTime: 'Done'\n      });\n      this.setState({\n        step2CheckOn: true\n      });\n      this.setState({\n        coldRiseTime: 'Done'\n      });\n      this.setState({\n        step3CheckOn: true\n      });\n      this.setState({\n        bringRoomTempTime: 'Now'\n      });\n      this.setState({\n        step4CheckOn: false\n      });\n      rightNow.setTime(rightNow.getTime() + 3600000);\n      this.setState({\n        moreIngredientsTime: rightNow.toLocaleTimeString([], {\n          hour: '2-digit',\n          minute: '2-digit'\n        })\n      });\n      this.setState({\n        step5CheckOn: false\n      });\n      rightNow.setTime(rightNow.getTime() + 600000);\n      this.setState({\n        riseRoomTempTime: rightNow.toLocaleTimeString([], {\n          hour: '2-digit',\n          minute: '2-digit'\n        })\n      });\n      this.setState({\n        step6CheckOn: false\n      });\n      rightNow.setTime(rightNow.getTime() + 10800000);\n      this.setState({\n        proofTime: rightNow.toLocaleTimeString([], {\n          hour: '2-digit',\n          minute: '2-digit'\n        })\n      });\n      this.setState({\n        step7CheckOn: false\n      });\n      rightNow.setTime(rightNow.getTime() + 3600000);\n      this.setState({\n        bakeTime: rightNow.toLocaleTimeString([], {\n          hour: '2-digit',\n          minute: '2-digit'\n        })\n      });\n      this.setState({\n        step8CheckOn: false\n      });\n      rightNow.setTime(rightNow.getTime() + 1800000);\n      this.setState({\n        coolTime: rightNow.toLocaleTimeString([], {\n          hour: '2-digit',\n          minute: '2-digit'\n        })\n      });\n      this.setState({\n        step9CheckOn: false\n      });\n      rightNow.setTime(rightNow.getTime() + 600000);\n      this.setState({\n        doneTime: rightNow.toLocaleTimeString([], {\n          hour: '2-digit',\n          minute: '2-digit'\n        })\n      });\n      this.setState({\n        step10CheckOn: false\n      });\n    } else if (stepNumber == 4) {\n      this.setState({\n        mixTime: 'Done'\n      });\n      this.setState({\n        step1CheckOn: true\n      });\n      this.setState({\n        roomTempTime: 'Done'\n      });\n      this.setState({\n        step2CheckOn: true\n      });\n      this.setState({\n        coldRiseTime: 'Done'\n      });\n      this.setState({\n        step3CheckOn: true\n      });\n      this.setState({\n        bringRoomTempTime: 'Done'\n      });\n      this.setState({\n        step4CheckOn: true\n      });\n      this.setState({\n        moreIngredientsTime: 'Now'\n      });\n      this.setState({\n        step5CheckOn: false\n      });\n      rightNow.setTime(rightNow.getTime() + 600000);\n      this.setState({\n        riseRoomTempTime: rightNow.toLocaleTimeString([], {\n          hour: '2-digit',\n          minute: '2-digit'\n        })\n      });\n      this.setState({\n        step6CheckOn: false\n      });\n      rightNow.setTime(rightNow.getTime() + 10800000);\n      this.setState({\n        proofTime: rightNow.toLocaleTimeString([], {\n          hour: '2-digit',\n          minute: '2-digit'\n        })\n      });\n      this.setState({\n        step7CheckOn: false\n      });\n      rightNow.setTime(rightNow.getTime() + 3600000);\n      this.setState({\n        bakeTime: rightNow.toLocaleTimeString([], {\n          hour: '2-digit',\n          minute: '2-digit'\n        })\n      });\n      this.setState({\n        step8CheckOn: false\n      });\n      rightNow.setTime(rightNow.getTime() + 1800000);\n      this.setState({\n        coolTime: rightNow.toLocaleTimeString([], {\n          hour: '2-digit',\n          minute: '2-digit'\n        })\n      });\n      this.setState({\n        step9CheckOn: false\n      });\n      rightNow.setTime(rightNow.getTime() + 600000);\n      this.setState({\n        doneTime: rightNow.toLocaleTimeString([], {\n          hour: '2-digit',\n          minute: '2-digit'\n        })\n      });\n      this.setState({\n        step10CheckOn: false\n      });\n    } else if (stepNumber == 5) {\n      this.setState({\n        mixTime: 'Done'\n      });\n      this.setState({\n        step1CheckOn: true\n      });\n      this.setState({\n        roomTempTime: 'Done'\n      });\n      this.setState({\n        step2CheckOn: true\n      });\n      this.setState({\n        coldRiseTime: 'Done'\n      });\n      this.setState({\n        step3CheckOn: true\n      });\n      this.setState({\n        bringRoomTempTime: 'Done'\n      });\n      this.setState({\n        step4CheckOn: true\n      });\n      this.setState({\n        moreIngredientsTime: 'Done'\n      });\n      this.setState({\n        step5CheckOn: true\n      });\n      this.setState({\n        riseRoomTempTime: 'Now'\n      });\n      this.setState({\n        step6CheckOn: false\n      });\n      rightNow.setTime(rightNow.getTime() + 10800000);\n      this.setState({\n        proofTime: rightNow.toLocaleTimeString([], {\n          hour: '2-digit',\n          minute: '2-digit'\n        })\n      });\n      this.setState({\n        step7CheckOn: false\n      });\n      rightNow.setTime(rightNow.getTime() + 3600000);\n      this.setState({\n        bakeTime: rightNow.toLocaleTimeString([], {\n          hour: '2-digit',\n          minute: '2-digit'\n        })\n      });\n      this.setState({\n        step8CheckOn: false\n      });\n      rightNow.setTime(rightNow.getTime() + 1800000);\n      this.setState({\n        coolTime: rightNow.toLocaleTimeString([], {\n          hour: '2-digit',\n          minute: '2-digit'\n        })\n      });\n      this.setState({\n        step9CheckOn: false\n      });\n      rightNow.setTime(rightNow.getTime() + 600000);\n      this.setState({\n        doneTime: rightNow.toLocaleTimeString([], {\n          hour: '2-digit',\n          minute: '2-digit'\n        })\n      });\n      this.setState({\n        step10CheckOn: false\n      });\n    } else if (stepNumber == 6) {\n      this.setState({\n        mixTime: 'Done'\n      });\n      this.setState({\n        step1CheckOn: true\n      });\n      this.setState({\n        roomTempTime: 'Done'\n      });\n      this.setState({\n        step2CheckOn: true\n      });\n      this.setState({\n        coldRiseTime: 'Done'\n      });\n      this.setState({\n        step3CheckOn: true\n      });\n      this.setState({\n        bringRoomTempTime: 'Done'\n      });\n      this.setState({\n        step4CheckOn: true\n      });\n      this.setState({\n        moreIngredientsTime: 'Done'\n      });\n      this.setState({\n        step5CheckOn: true\n      });\n      this.setState({\n        riseRoomTempTime: 'Done'\n      });\n      this.setState({\n        step6CheckOn: true\n      });\n      this.setState({\n        proofTime: 'Now'\n      });\n      rightNow.setTime(rightNow.getTime() + 3600000);\n      this.setState({\n        step7CheckOn: false\n      });\n      this.setState({\n        bakeTime: rightNow.toLocaleTimeString([], {\n          hour: '2-digit',\n          minute: '2-digit'\n        })\n      });\n      this.setState({\n        step8CheckOn: false\n      });\n      rightNow.setTime(rightNow.getTime() + 1800000);\n      this.setState({\n        coolTime: rightNow.toLocaleTimeString([], {\n          hour: '2-digit',\n          minute: '2-digit'\n        })\n      });\n      this.setState({\n        step9CheckOn: false\n      });\n      rightNow.setTime(rightNow.getTime() + 600000);\n      this.setState({\n        doneTime: rightNow.toLocaleTimeString([], {\n          hour: '2-digit',\n          minute: '2-digit'\n        })\n      });\n      this.setState({\n        step10CheckOn: false\n      });\n    } else if (stepNumber == 7) {\n      this.setState({\n        mixTime: 'Done'\n      });\n      this.setState({\n        step1CheckOn: true\n      });\n      this.setState({\n        roomTempTime: 'Done'\n      });\n      this.setState({\n        step2CheckOn: true\n      });\n      this.setState({\n        coldRiseTime: 'Done'\n      });\n      this.setState({\n        step3CheckOn: true\n      });\n      this.setState({\n        bringRoomTempTime: 'Done'\n      });\n      this.setState({\n        step4CheckOn: true\n      });\n      this.setState({\n        moreIngredientsTime: 'Done'\n      });\n      this.setState({\n        step5CheckOn: true\n      });\n      this.setState({\n        riseRoomTempTime: 'Done'\n      });\n      this.setState({\n        step6CheckOn: true\n      });\n      this.setState({\n        proofTime: 'Done'\n      });\n      this.setState({\n        step7CheckOn: true\n      });\n      this.setState({\n        bakeTime: 'Now'\n      });\n      this.setState({\n        step8CheckOn: false\n      });\n      rightNow.setTime(rightNow.getTime() + 1800000);\n      this.setState({\n        coolTime: rightNow.toLocaleTimeString([], {\n          hour: '2-digit',\n          minute: '2-digit'\n        })\n      });\n      this.setState({\n        step9CheckOn: false\n      });\n      rightNow.setTime(rightNow.getTime() + 600000);\n      this.setState({\n        doneTime: rightNow.toLocaleTimeString([], {\n          hour: '2-digit',\n          minute: '2-digit'\n        })\n      });\n      this.setState({\n        step10CheckOn: false\n      });\n    } else if (stepNumber == 8) {\n      this.setState({\n        mixTime: 'Done'\n      });\n      this.setState({\n        step1CheckOn: true\n      });\n      this.setState({\n        roomTempTime: 'Done'\n      });\n      this.setState({\n        step2CheckOn: true\n      });\n      this.setState({\n        coldRiseTime: 'Done'\n      });\n      this.setState({\n        step3CheckOn: true\n      });\n      this.setState({\n        bringRoomTempTime: 'Done'\n      });\n      this.setState({\n        step4CheckOn: true\n      });\n      this.setState({\n        moreIngredientsTime: 'Done'\n      });\n      this.setState({\n        step5CheckOn: true\n      });\n      this.setState({\n        riseRoomTempTime: 'Done'\n      });\n      this.setState({\n        step6CheckOn: true\n      });\n      this.setState({\n        proofTime: 'Done'\n      });\n      this.setState({\n        step7CheckOn: true\n      });\n      this.setState({\n        bakeTime: 'Done'\n      });\n      this.setState({\n        step8CheckOn: true\n      });\n      this.setState({\n        coolTime: 'Now'\n      });\n      this.setState({\n        step9CheckOn: false\n      });\n      rightNow.setTime(rightNow.getTime() + 600000);\n      this.setState({\n        doneTime: rightNow.toLocaleTimeString([], {\n          hour: '2-digit',\n          minute: '2-digit'\n        })\n      });\n      this.setState({\n        step10CheckOn: false\n      });\n    } else if (stepNumber >= 9) {\n      this.setState({\n        mixTime: 'Done'\n      });\n      this.setState({\n        step1CheckOn: true\n      });\n      this.setState({\n        roomTempTime: 'Done'\n      });\n      this.setState({\n        step2CheckOn: true\n      });\n      this.setState({\n        coldRiseTime: 'Done'\n      });\n      this.setState({\n        step3CheckOn: true\n      });\n      this.setState({\n        bringRoomTempTime: 'Done'\n      });\n      this.setState({\n        step4CheckOn: true\n      });\n      this.setState({\n        moreIngredientsTime: 'Done'\n      });\n      this.setState({\n        step5CheckOn: true\n      });\n      this.setState({\n        riseRoomTempTime: 'Done'\n      });\n      this.setState({\n        step6CheckOn: true\n      });\n      this.setState({\n        proofTime: 'Done'\n      });\n      this.setState({\n        step7CheckOn: true\n      });\n      this.setState({\n        bakeTime: 'Done'\n      });\n      this.setState({\n        step8CheckOn: true\n      });\n      this.setState({\n        coolTime: 'Done'\n      });\n      this.setState({\n        step9CheckOn: true\n      });\n      this.setState({\n        doneTime: 'Wooh!'\n      }); //this.setState({ step10CheckOn: true});\n\n      if (stepNumber == 10) {\n        this.setState({\n          transitionIn: 0,\n          transitionOut: 2000\n        });\n        this.setState({\n          cardVisible: false\n        });\n      }\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"ui container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        class: \"ui centered header\",\n        children: [\"Current Time: \", this.state.currentTime]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 476,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n        class: \"ui centered header\",\n        children: [/*#__PURE__*/_jsxDEV(StepTimer, {\n          nextStepTime: this.state.nextStepTime,\n          startTime: Date.now(),\n          alarmChecked: this.state.alarmChecked\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 478,\n          columnNumber: 11\n        }, this), \"'  '\", /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"ui checkbox\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            name: \"example\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 485,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Alarm\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 486,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 484,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 477,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"column\",\n          children: [/*#__PURE__*/_jsxDEV(Transition, {\n            visible: !this.state.cardVisible,\n            animation: \"scale\",\n            duration: this.state.transitionOut,\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              animated: true,\n              onClick: () => this.onPress(0),\n              children: [/*#__PURE__*/_jsxDEV(Button.Content, {\n                visible: true,\n                children: \"BAKE\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 493,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Button.Content, {\n                hidden: true,\n                children: \"BEGIN\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 494,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 492,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 491,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Transition, {\n            visible: this.state.cardVisible,\n            animation: \"scale\",\n            duration: this.state.transitionIn,\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                animated: true,\n                onClick: () => this.onPress(0),\n                children: [/*#__PURE__*/_jsxDEV(Button.Content, {\n                  visible: true,\n                  children: \"BAKE\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 502,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Button.Content, {\n                  hidden: true,\n                  children: \"BEGIN\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 503,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 501,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 500,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 499,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 490,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Transition, {\n          visible: this.state.cardVisible,\n          animation: \"scale\",\n          duration: this.state.transitionIn,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"column\",\n            children: /*#__PURE__*/_jsxDEV(Card, {\n              children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n                children: /*#__PURE__*/_jsxDEV(Header, {\n                  children: \"Time of Step\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 518,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 517,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Card.Content, {\n                children: [/*#__PURE__*/_jsxDEV(Card.Description, {\n                  children: /*#__PURE__*/_jsxDEV(Task, {\n                    text: \"Mix Initial Ingredients\",\n                    stepTime: this.state.mixTime,\n                    numberStep: 1,\n                    onPressChild: this.onPress,\n                    timeInfo: \"10 minutes\",\n                    checkOn: this.state.step1CheckOn\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 522,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 521,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Card.Description, {\n                  children: /*#__PURE__*/_jsxDEV(Task, {\n                    text: \"Room Temp Rise\",\n                    stepTime: this.state.roomTempTime,\n                    numberStep: 2,\n                    onPressChild: this.onPress,\n                    timeInfo: \"1 hour\",\n                    checkOn: this.state.step2CheckOn\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 532,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 531,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Card.Description, {\n                  children: /*#__PURE__*/_jsxDEV(Task, {\n                    text: \"Cold Rise\",\n                    stepTime: this.state.coldRiseTime,\n                    numberStep: 3,\n                    onPressChild: this.onPress,\n                    timeInfo: \"12 hours\",\n                    checkOn: this.state.step3CheckOn\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 542,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 541,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Card.Description, {\n                  children: /*#__PURE__*/_jsxDEV(Task, {\n                    text: \"Bring To Room Temp\",\n                    stepTime: this.state.bringRoomTempTime,\n                    numberStep: 4,\n                    onPressChild: this.onPress,\n                    timeInfo: \"1 hour\",\n                    checkOn: this.state.step4CheckOn\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 552,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 551,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Card.Description, {\n                  children: /*#__PURE__*/_jsxDEV(Task, {\n                    text: \"More Ingredients\",\n                    stepTime: this.state.moreIngredientsTime,\n                    numberStep: 5,\n                    onPressChild: this.onPress,\n                    timeInfo: \"10 minutes\",\n                    checkOn: this.state.step5CheckOn\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 562,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 561,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Card.Description, {\n                  children: /*#__PURE__*/_jsxDEV(Task, {\n                    text: \"Rise @ Room Temp\",\n                    stepTime: this.state.riseRoomTempTime,\n                    numberStep: 6,\n                    onPressChild: this.onPress,\n                    timeInfo: \"3 hours\",\n                    checkOn: this.state.step6CheckOn\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 572,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 571,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Card.Description, {\n                  children: /*#__PURE__*/_jsxDEV(Task, {\n                    text: \"Proof\",\n                    stepTime: this.state.proofTime,\n                    numberStep: 7,\n                    onPressChild: this.onPress,\n                    timeInfo: \"1 hour\",\n                    checkOn: this.state.step7CheckOn\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 582,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 581,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Card.Description, {\n                  children: /*#__PURE__*/_jsxDEV(Task, {\n                    text: \"Bake\",\n                    stepTime: this.state.bakeTime,\n                    numberStep: 8,\n                    onPressChild: this.onPress,\n                    timeInfo: \"30 minutes\",\n                    checkOn: this.state.step8CheckOn\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 592,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 591,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Card.Description, {\n                  children: /*#__PURE__*/_jsxDEV(Task, {\n                    text: \"Cool time\",\n                    stepTime: this.state.coolTime,\n                    numberStep: 9,\n                    onPressChild: this.onPress,\n                    timeInfo: \"10 minutes\",\n                    checkOn: this.state.step9CheckOn\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 602,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 601,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Card.Description, {\n                  children: /*#__PURE__*/_jsxDEV(Task, {\n                    text: \"Done\",\n                    stepTime: this.state.doneTime,\n                    numberStep: 10,\n                    onPressChild: this.onPress,\n                    timeInfo: \"\",\n                    checkOn: this.state.step10CheckOn\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 612,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 611,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 520,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 516,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 511,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 510,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 489,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 475,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nfunction App() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(TimerWindow, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 635,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 634,\n    columnNumber: 5\n  }, this);\n}\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/connorpuhala/Code/django-project-2/project2/src/App.js"],"names":["React","Component","Button","Card","Header","Transition","Image","baguette","StepTimer","constructor","props","timer","state","time","Date","isRunning","alarmChecked","componentWillMount","setTimeout","setState","Math","floor","now","componentWillUnmount","clearTimeout","msToTime","duration","milliseconds","parseInt","seconds","minutes","hours","render","console","log","startTime","nextStepTime","getTime","timeLeft","alert","Task","checkOn","onPressChild","numberStep","stepTime","text","timeInfo","Time","toLocaleTimeString","hour","minute","TimerWindow","onPress","stepNumber","rightNowOG","setTime","transitionIn","transitionOut","cardVisible","updateAllTimes","currentTime","mixTime","roomTempTime","coldRiseTime","bringRoomTempTime","moreIngredientsTime","riseRoomTempTime","proofTime","bakeTime","coolTime","doneTime","step1CheckOn","step2CheckOn","step3CheckOn","step4CheckOn","step5CheckOn","step6CheckOn","step7CheckOn","step8CheckOn","step9CheckOn","step10CheckOn","bind","isAlarmChecked","rightNow","App"],"mappings":"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","sourcesContent":["//import logo from './logo.svg';\nimport React, { Component } from \"react\";\nimport { Button, Card, Header, Transition, Image} from 'semantic-ui-react'\nimport './App.css';\nimport baguette from './images/baguettecard.png';\n\nclass StepTimer extends React.Component {\n  constructor(props){\n    super(props);\n\n    this.timer = 0;\n    this.state = {\n        time: new Date(),\n        isRunning: false,\n        alarmChecked: false\n    };\n\n  }\n\n  componentWillMount(){\n    // set up timer\n    this.timer = setTimeout(() => {\n        this.setState({\n            time: new Date()\n        });\n        this.componentWillMount();\n    }, Math.floor(Date.now() / 1000) * 1000 + 1000 - Date.now());\n  }\n\n  componentWillUnmount(){\n    // remove timer\n    clearTimeout(this.timer);\n  }\n\n  msToTime(duration) {\n    var milliseconds = parseInt((duration % 1000) / 100),\n      seconds = Math.floor((duration / 1000) % 60),\n      minutes = Math.floor((duration / (1000 * 60)) % 60),\n      hours = Math.floor((duration / (1000 * 60 * 60)) % 24);\n  \n    hours = (hours < 10) ? \"0\" + hours : hours;\n    minutes = (minutes < 10) ? \"0\" + minutes : minutes;\n    seconds = (seconds < 10) ? \"0\" + seconds : seconds;\n  \n    return \"Step Timer: \" + hours + \":\" + minutes + \":\" + seconds;\n  }\n  \n\n  render() {\n    console.log (this.props.startTime);\n    console.log (this.props.nextStepTime);\n    console.log (this.state.time.getTime());\n    let timeLeft = (this.props.startTime) + (this.props.nextStepTime);\n\n    // if ((timeLeft - this.state.time) <= 0){\n    //   alert('TIME UP');\n    // }\n    if ((timeLeft - this.state.time) > 0 && this.state.isRunning == false) {\n      this.setState({ isRunning: true })\n    } \n    \n    if ((timeLeft - this.state.time) <= 0 && this.state.isRunning == true && this.state.alarmChecked) {\n      alert ('Time up');\n      this.setState({ isRunning: false })\n    } \n\n    if ((timeLeft - this.state.time) > 0) {\n      return this.msToTime(timeLeft - this.state.time);\n    } else {\n      return 'Ready';\n    }\n  }\n}\n\nclass Task extends React.Component {\n  \n  constructor(props) {\n    super(props);\n\n    //this.handleCheck = this.handleCheck.bind(this);\n  }\n\n  // handleCheck(theStepNumber) {\n  //   if (theStepNumber == 2) {\n  //     console.log('step 2 bishhh');\n  //   }\n  // }\n\n  render() {\n    return (\n      <div class=\"ui checkbox\">\n        <input type=\"checkbox\" checked={this.props.checkOn} onClick={() => this.props.onPressChild(this.props.numberStep)}/>\n        <label>{this.props.stepTime} - {this.props.text}</label>\n        <div className='extra'>{this.props.timeInfo}</div>\n      </div>\n    )\n  }\n\n}\n\nclass Time extends React.Component {\n  constructor(props){\n      super(props);\n      this.timer = 0;\n      this.state = {\n          time: new Date()\n      };\n  }\n  componentWillMount(){\n      // set up timer\n      this.timer = setTimeout(() => {\n          this.setState({\n              time: new Date()\n          });\n          this.componentWillMount();\n      }, Math.floor(Date.now() / 1000) * 1000 + 1000 - Date.now());\n  }\n  componentWillUnmount(){\n      // remove timer\n      clearTimeout(this.timer);\n  }\n  \n  render() {\n      // render the current time\n      return this.state.time.toLocaleTimeString([], {hour: '2-digit', minute:'2-digit'});\n  }\n}\n\nclass TimerWindow extends Component { \n  constructor(props) {\n    super(props);\n\n    this.state = {\n      currentTime: <Time />,\n      mixTime: '',\n      roomTempTime: '',\n      coldRiseTime: '',\n      bringRoomTempTime: '',\n      moreIngredientsTime: '',\n      riseRoomTempTime: '',\n      proofTime: '',\n      bakeTime: '',\n      coolTime: '',\n      doneTime: '',\n\n      step1CheckOn: false,\n      step2CheckOn: false,\n      step3CheckOn: false,\n      step4CheckOn: false,\n      step5CheckOn: false,\n      step6CheckOn: false,\n      step7CheckOn: false,\n      step8CheckOn: false,\n      step9CheckOn: false,\n      step10CheckOn: false,\n\n      nextStepTime: '',\n\n      cardVisible: false,\n      alarmChecked: false,\n\n      transitionIn: 500,\n      transitionOut: 0,\n    }\n\n    this.onPress = this.onPress.bind(this);\n  }\n\n  isAlarmChecked(){\n\n    // something\n  }\n\n  updateAllTimes(rightNow, stepNumber) {\n    if (stepNumber == 0) {\n      this.setState({ mixTime: 'Now'});\n      this.setState({ step1CheckOn: false});\n      rightNow.setTime(rightNow.getTime() + 600000);\n      this.setState({ roomTempTime: rightNow.toLocaleTimeString([], {hour: '2-digit', minute:'2-digit'})});\n      this.setState({ step2CheckOn: false});\n      rightNow.setTime(rightNow.getTime() + 3600000);\n      this.setState({ coldRiseTime: rightNow.toLocaleTimeString([], {hour: '2-digit', minute:'2-digit'})});\n      this.setState({ step3CheckOn: false});\n      rightNow.setTime(rightNow.getTime() + 43200000);\n      this.setState({ bringRoomTempTime: rightNow.toLocaleTimeString([], {hour: '2-digit', minute:'2-digit'})});\n      this.setState({ step4CheckOn: false});\n      rightNow.setTime(rightNow.getTime() + 3600000);\n      this.setState({ moreIngredientsTime: rightNow.toLocaleTimeString([], {hour: '2-digit', minute:'2-digit'})});\n      this.setState({ step5CheckOn: false});\n      rightNow.setTime(rightNow.getTime() + 600000);\n      this.setState({ riseRoomTempTime: rightNow.toLocaleTimeString([], {hour: '2-digit', minute:'2-digit'})});\n      this.setState({ step6CheckOn: false});\n      rightNow.setTime(rightNow.getTime() + 10800000);\n      this.setState({ proofTime: rightNow.toLocaleTimeString([], {hour: '2-digit', minute:'2-digit'})});\n      this.setState({ step7CheckOn: false});\n      rightNow.setTime(rightNow.getTime() + 3600000);\n      this.setState({ bakeTime: rightNow.toLocaleTimeString([], {hour: '2-digit', minute:'2-digit'})});\n      this.setState({ step8CheckOn: false});\n      rightNow.setTime(rightNow.getTime() + 1800000);\n      this.setState({ coolTime: rightNow.toLocaleTimeString([], {hour: '2-digit', minute:'2-digit'})});\n      this.setState({ step9CheckOn: false});\n      rightNow.setTime(rightNow.getTime() + 600000);\n      this.setState({ doneTime: rightNow.toLocaleTimeString([], {hour: '2-digit', minute:'2-digit'})});\n      this.setState({ step10CheckOn: false});\n    } else if (stepNumber == 1) {\n      this.setState({ mixTime: 'Done'});\n      this.setState({ step1CheckOn: true});\n      this.setState({ roomTempTime: 'Now'});\n      this.setState({ step2CheckOn: false});\n      rightNow.setTime(rightNow.getTime() + 3600000);\n      this.setState({ coldRiseTime: rightNow.toLocaleTimeString([], {hour: '2-digit', minute:'2-digit'})});\n      this.setState({ step3CheckOn: false});\n      rightNow.setTime(rightNow.getTime() + 43200000);\n      this.setState({ bringRoomTempTime: rightNow.toLocaleTimeString([], {hour: '2-digit', minute:'2-digit'})});\n      this.setState({ step4CheckOn: false});\n      rightNow.setTime(rightNow.getTime() + 3600000);\n      this.setState({ moreIngredientsTime: rightNow.toLocaleTimeString([], {hour: '2-digit', minute:'2-digit'})});\n      this.setState({ step5CheckOn: false});\n      rightNow.setTime(rightNow.getTime() + 600000);\n      this.setState({ riseRoomTempTime: rightNow.toLocaleTimeString([], {hour: '2-digit', minute:'2-digit'})});\n      this.setState({ step6CheckOn: false});\n      rightNow.setTime(rightNow.getTime() + 10800000);\n      this.setState({ proofTime: rightNow.toLocaleTimeString([], {hour: '2-digit', minute:'2-digit'})});\n      this.setState({ step7CheckOn: false});\n      rightNow.setTime(rightNow.getTime() + 3600000);\n      this.setState({ bakeTime: rightNow.toLocaleTimeString([], {hour: '2-digit', minute:'2-digit'})});\n      this.setState({ step8CheckOn: false});\n      rightNow.setTime(rightNow.getTime() + 1800000);\n      this.setState({ coolTime: rightNow.toLocaleTimeString([], {hour: '2-digit', minute:'2-digit'})});\n      this.setState({ step9CheckOn: false});\n      rightNow.setTime(rightNow.getTime() + 600000);\n      this.setState({ doneTime: rightNow.toLocaleTimeString([], {hour: '2-digit', minute:'2-digit'})});\n      this.setState({ step10CheckOn: false});\n    } else if (stepNumber == 2) {\n      this.setState({ mixTime: 'Done'});\n      this.setState({ step1CheckOn: true});\n      this.setState({ roomTempTime: 'Done'});\n      this.setState({ step2CheckOn: true});\n      this.setState({ coldRiseTime: 'Now'});\n      this.setState({ step3CheckOn: false});\n      //console.log(rightNow.toLocaleTimeString([], {hour: '2-digit', minute:'2-digit'}))\n      rightNow.setTime(rightNow.getTime() + 43200000);\n      this.setState({ bringRoomTempTime: rightNow.toLocaleTimeString([], {hour: '2-digit', minute:'2-digit'})});\n      this.setState({ step4CheckOn: false});\n      rightNow.setTime(rightNow.getTime() + 3600000);\n      this.setState({ moreIngredientsTime: rightNow.toLocaleTimeString([], {hour: '2-digit', minute:'2-digit'})});\n      this.setState({ step5CheckOn: false});\n      rightNow.setTime(rightNow.getTime() + 600000);\n      this.setState({ riseRoomTempTime: rightNow.toLocaleTimeString([], {hour: '2-digit', minute:'2-digit'})});\n      this.setState({ step6CheckOn: false});\n      rightNow.setTime(rightNow.getTime() + 10800000);\n      this.setState({ proofTime: rightNow.toLocaleTimeString([], {hour: '2-digit', minute:'2-digit'})});\n      this.setState({ step7CheckOn: false});\n      rightNow.setTime(rightNow.getTime() + 3600000);\n      this.setState({ bakeTime: rightNow.toLocaleTimeString([], {hour: '2-digit', minute:'2-digit'})});\n      this.setState({ step8CheckOn: false});\n      rightNow.setTime(rightNow.getTime() + 1800000);\n      this.setState({ coolTime: rightNow.toLocaleTimeString([], {hour: '2-digit', minute:'2-digit'})});\n      this.setState({ step9CheckOn: false});\n      rightNow.setTime(rightNow.getTime() + 600000);\n      this.setState({ doneTime: rightNow.toLocaleTimeString([], {hour: '2-digit', minute:'2-digit'})});\n      this.setState({ step10CheckOn: false});\n    } else if (stepNumber == 3) {\n      this.setState({ mixTime: 'Done'});\n      this.setState({ step1CheckOn: true});\n      this.setState({ roomTempTime: 'Done'});\n      this.setState({ step2CheckOn: true});\n      this.setState({ coldRiseTime: 'Done'});\n      this.setState({ step3CheckOn: true});\n      this.setState({ bringRoomTempTime: 'Now'});\n      this.setState({ step4CheckOn: false});\n      rightNow.setTime(rightNow.getTime() + 3600000);\n      this.setState({ moreIngredientsTime: rightNow.toLocaleTimeString([], {hour: '2-digit', minute:'2-digit'})});\n      this.setState({ step5CheckOn: false});\n      rightNow.setTime(rightNow.getTime() + 600000);\n      this.setState({ riseRoomTempTime: rightNow.toLocaleTimeString([], {hour: '2-digit', minute:'2-digit'})});\n      this.setState({ step6CheckOn: false});\n      rightNow.setTime(rightNow.getTime() + 10800000);\n      this.setState({ proofTime: rightNow.toLocaleTimeString([], {hour: '2-digit', minute:'2-digit'})});\n      this.setState({ step7CheckOn: false});\n      rightNow.setTime(rightNow.getTime() + 3600000);\n      this.setState({ bakeTime: rightNow.toLocaleTimeString([], {hour: '2-digit', minute:'2-digit'})});\n      this.setState({ step8CheckOn: false});\n      rightNow.setTime(rightNow.getTime() + 1800000);\n      this.setState({ coolTime: rightNow.toLocaleTimeString([], {hour: '2-digit', minute:'2-digit'})});\n      this.setState({ step9CheckOn: false});\n      rightNow.setTime(rightNow.getTime() + 600000);\n      this.setState({ doneTime: rightNow.toLocaleTimeString([], {hour: '2-digit', minute:'2-digit'})});\n      this.setState({ step10CheckOn: false});\n    } else if (stepNumber == 4) {\n      this.setState({ mixTime: 'Done'});\n      this.setState({ step1CheckOn: true});\n      this.setState({ roomTempTime: 'Done'});\n      this.setState({ step2CheckOn: true});\n      this.setState({ coldRiseTime: 'Done'});\n      this.setState({ step3CheckOn: true});\n      this.setState({ bringRoomTempTime: 'Done'});\n      this.setState({ step4CheckOn: true});\n      this.setState({ moreIngredientsTime: 'Now'});\n      this.setState({ step5CheckOn: false});\n      rightNow.setTime(rightNow.getTime() + 600000);\n      this.setState({ riseRoomTempTime: rightNow.toLocaleTimeString([], {hour: '2-digit', minute:'2-digit'})});\n      this.setState({ step6CheckOn: false});\n      rightNow.setTime(rightNow.getTime() + 10800000);\n      this.setState({ proofTime: rightNow.toLocaleTimeString([], {hour: '2-digit', minute:'2-digit'})});\n      this.setState({ step7CheckOn: false});\n      rightNow.setTime(rightNow.getTime() + 3600000);\n      this.setState({ bakeTime: rightNow.toLocaleTimeString([], {hour: '2-digit', minute:'2-digit'})});\n      this.setState({ step8CheckOn: false});\n      rightNow.setTime(rightNow.getTime() + 1800000);\n      this.setState({ coolTime: rightNow.toLocaleTimeString([], {hour: '2-digit', minute:'2-digit'})});\n      this.setState({ step9CheckOn: false});\n      rightNow.setTime(rightNow.getTime() + 600000);\n      this.setState({ doneTime: rightNow.toLocaleTimeString([], {hour: '2-digit', minute:'2-digit'})});\n      this.setState({ step10CheckOn: false});\n    } else if (stepNumber == 5) {\n      this.setState({ mixTime: 'Done'});\n      this.setState({ step1CheckOn: true});\n      this.setState({ roomTempTime: 'Done'});\n      this.setState({ step2CheckOn: true});\n      this.setState({ coldRiseTime: 'Done'});\n      this.setState({ step3CheckOn: true});\n      this.setState({ bringRoomTempTime: 'Done'});\n      this.setState({ step4CheckOn: true});\n      this.setState({ moreIngredientsTime: 'Done'});\n      this.setState({ step5CheckOn: true});\n      this.setState({ riseRoomTempTime: 'Now'});\n      this.setState({ step6CheckOn: false});\n      rightNow.setTime(rightNow.getTime() + 10800000);\n      this.setState({ proofTime: rightNow.toLocaleTimeString([], {hour: '2-digit', minute:'2-digit'})});\n      this.setState({ step7CheckOn: false});\n      rightNow.setTime(rightNow.getTime() + 3600000);\n      this.setState({ bakeTime: rightNow.toLocaleTimeString([], {hour: '2-digit', minute:'2-digit'})});\n      this.setState({ step8CheckOn: false});\n      rightNow.setTime(rightNow.getTime() + 1800000);\n      this.setState({ coolTime: rightNow.toLocaleTimeString([], {hour: '2-digit', minute:'2-digit'})});\n      this.setState({ step9CheckOn: false});\n      rightNow.setTime(rightNow.getTime() + 600000);\n      this.setState({ doneTime: rightNow.toLocaleTimeString([], {hour: '2-digit', minute:'2-digit'})});\n      this.setState({ step10CheckOn: false});\n    } else if (stepNumber == 6) {\n      this.setState({ mixTime: 'Done'});\n      this.setState({ step1CheckOn: true});\n      this.setState({ roomTempTime: 'Done'});\n      this.setState({ step2CheckOn: true});\n      this.setState({ coldRiseTime: 'Done'});\n      this.setState({ step3CheckOn: true});\n      this.setState({ bringRoomTempTime: 'Done'});\n      this.setState({ step4CheckOn: true});\n      this.setState({ moreIngredientsTime: 'Done'});\n      this.setState({ step5CheckOn: true});\n      this.setState({ riseRoomTempTime: 'Done'});\n      this.setState({ step6CheckOn: true});\n      this.setState({ proofTime: 'Now'});\n      rightNow.setTime(rightNow.getTime() + 3600000);\n      this.setState({ step7CheckOn: false});\n      this.setState({ bakeTime: rightNow.toLocaleTimeString([], {hour: '2-digit', minute:'2-digit'})});\n      this.setState({ step8CheckOn: false});\n      rightNow.setTime(rightNow.getTime() + 1800000);\n      this.setState({ coolTime: rightNow.toLocaleTimeString([], {hour: '2-digit', minute:'2-digit'})});\n      this.setState({ step9CheckOn: false});\n      rightNow.setTime(rightNow.getTime() + 600000);\n      this.setState({ doneTime: rightNow.toLocaleTimeString([], {hour: '2-digit', minute:'2-digit'})});\n      this.setState({ step10CheckOn: false});\n    } else if (stepNumber == 7) {\n      this.setState({ mixTime: 'Done'});\n      this.setState({ step1CheckOn: true});\n      this.setState({ roomTempTime: 'Done'});\n      this.setState({ step2CheckOn: true});\n      this.setState({ coldRiseTime: 'Done'});\n      this.setState({ step3CheckOn: true});\n      this.setState({ bringRoomTempTime: 'Done'});\n      this.setState({ step4CheckOn: true});\n      this.setState({ moreIngredientsTime: 'Done'});\n      this.setState({ step5CheckOn: true});\n      this.setState({ riseRoomTempTime: 'Done'});\n      this.setState({ step6CheckOn: true});\n      this.setState({ proofTime: 'Done'});\n      this.setState({ step7CheckOn: true});\n      this.setState({ bakeTime: 'Now'});\n      this.setState({ step8CheckOn: false});\n      rightNow.setTime(rightNow.getTime() + 1800000);\n      this.setState({ coolTime: rightNow.toLocaleTimeString([], {hour: '2-digit', minute:'2-digit'})});\n      this.setState({ step9CheckOn: false});\n      rightNow.setTime(rightNow.getTime() + 600000);\n      this.setState({ doneTime: rightNow.toLocaleTimeString([], {hour: '2-digit', minute:'2-digit'})});\n      this.setState({ step10CheckOn: false});\n    } else if (stepNumber == 8) {\n      this.setState({ mixTime: 'Done'});\n      this.setState({ step1CheckOn: true});\n      this.setState({ roomTempTime: 'Done'});\n      this.setState({ step2CheckOn: true});\n      this.setState({ coldRiseTime: 'Done'});\n      this.setState({ step3CheckOn: true});\n      this.setState({ bringRoomTempTime: 'Done'});\n      this.setState({ step4CheckOn: true});\n      this.setState({ moreIngredientsTime: 'Done'});\n      this.setState({ step5CheckOn: true});\n      this.setState({ riseRoomTempTime: 'Done'});\n      this.setState({ step6CheckOn: true});\n      this.setState({ proofTime: 'Done'});\n      this.setState({ step7CheckOn: true});\n      this.setState({ bakeTime: 'Done'});\n      this.setState({ step8CheckOn: true});\n      this.setState({ coolTime: 'Now'});\n      this.setState({ step9CheckOn: false});\n      rightNow.setTime(rightNow.getTime() + 600000);\n      this.setState({ doneTime: rightNow.toLocaleTimeString([], {hour: '2-digit', minute:'2-digit'})});\n      this.setState({ step10CheckOn: false});\n    } else if (stepNumber >= 9) {\n      this.setState({ mixTime: 'Done'});\n      this.setState({ step1CheckOn: true});\n      this.setState({ roomTempTime: 'Done'});\n      this.setState({ step2CheckOn: true});\n      this.setState({ coldRiseTime: 'Done'});\n      this.setState({ step3CheckOn: true});\n      this.setState({ bringRoomTempTime: 'Done'});\n      this.setState({ step4CheckOn: true});\n      this.setState({ moreIngredientsTime: 'Done'});\n      this.setState({ step5CheckOn: true});\n      this.setState({ riseRoomTempTime: 'Done'});\n      this.setState({ step6CheckOn: true});\n      this.setState({ proofTime: 'Done'});\n      this.setState({ step7CheckOn: true});\n      this.setState({ bakeTime: 'Done'});\n      this.setState({ step8CheckOn: true});\n      this.setState({ coolTime: 'Done'});\n      this.setState({ step9CheckOn: true});\n      this.setState({ doneTime: 'Wooh!'});\n      //this.setState({ step10CheckOn: true});\n      if (stepNumber == 10) {\n        this.setState({ \n          transitionIn: 0,\n          transitionOut: 2000\n        });\n        this.setState({ cardVisible: false});\n      }\n    }\n  }\n\n  onPress = (stepNumber) => {\n    let rightNowOG = new Date();\n    rightNowOG.setTime(Date.now());\n    if (stepNumber == 0) {\n      this.setState({ nextStepTime: 600000});\n    } else if (stepNumber == 1) {\n      this.setState({ nextStepTime: 3600000});\n    } else if (stepNumber == 2) {\n      this.setState({ nextStepTime: 43200000});\n    } else if (stepNumber == 3) {\n      this.setState({ nextStepTime: 3600000});\n    } else if (stepNumber == 4) {\n      this.setState({ nextStepTime: 600000});\n    } else if (stepNumber == 5) {\n      this.setState({ nextStepTime: 10800000});\n    } else if (stepNumber == 6) {\n      this.setState({ nextStepTime: 360000});\n    } else if (stepNumber == 7) {\n      this.setState({ nextStepTime: 1800000});\n    } else if (stepNumber == 8) {\n      this.setState({ nextStepTime: 600000});\n    } else if (stepNumber >= 9) {\n      this.setState({ nextStepTime: 0});\n    }\n    this.setState({ \n      transitionIn: 500,\n      transitionOut: 0\n    });\n    this.setState({ cardVisible: true});\n    this.updateAllTimes(rightNowOG, stepNumber);\n  }\n\n  render() {\n    return (\n      <div class=\"ui container\">\n        <h3 class=\"ui centered header\">Current Time: {this.state.currentTime}</h3>\n        <h5 class='ui centered header'>\n          <StepTimer \n            nextStepTime={this.state.nextStepTime}\n            startTime={Date.now()}\n            alarmChecked={this.state.alarmChecked}\n          />\n          '  '\n          <div class=\"ui checkbox\">\n            <input type=\"checkbox\" name=\"example\" />\n            <label>Alarm</label>\n          </div>\n        </h5>\n        <div className='row'>\n          <div className='column'>\n            <Transition visible={!this.state.cardVisible} animation='scale' duration={this.state.transitionOut}>\n              <Button animated onClick={() => this.onPress(0)}>\n                <Button.Content visible>BAKE</Button.Content>\n                <Button.Content hidden>\n                  BEGIN\n                </Button.Content>\n              </Button>\n            </Transition>\n            <Transition visible={this.state.cardVisible} animation='scale' duration={this.state.transitionIn}>\n              <div>\n                <Button animated onClick={() => this.onPress(0)}>\n                  <Button.Content visible>BAKE</Button.Content>\n                  <Button.Content hidden>\n                    BEGIN\n                  </Button.Content>\n                </Button>\n              </div>\n            </Transition>\n          </div>\n          <Transition visible={this.state.cardVisible} animation='scale' duration={this.state.transitionIn}>\n            <div className='column'>\n              {/* <Transition visible={!this.state.cardVisible} animation='scale' duration={500} wrapped ui={false}>\n                <Image src={baguette} wrapped ui={false} width=\"200\" />\n              </Transition> */}\n              \n                <Card>\n                  <Card.Header>\n                    <Header>Time of Step</Header>\n                  </Card.Header>\n                  <Card.Content>\n                    <Card.Description>\n                      <Task \n                        text='Mix Initial Ingredients'\n                        stepTime={this.state.mixTime}\n                        numberStep={1}\n                        onPressChild={this.onPress}\n                        timeInfo='10 minutes'\n                        checkOn={this.state.step1CheckOn}\n                      />\n                    </Card.Description>\n                    <Card.Description>\n                      <Task \n                        text='Room Temp Rise'\n                        stepTime={this.state.roomTempTime}\n                        numberStep={2}\n                        onPressChild={this.onPress}\n                        timeInfo='1 hour'\n                        checkOn={this.state.step2CheckOn}\n                      />\n                    </Card.Description>\n                    <Card.Description>\n                      <Task \n                        text='Cold Rise'\n                        stepTime={this.state.coldRiseTime}\n                        numberStep={3}\n                        onPressChild={this.onPress}\n                        timeInfo='12 hours'\n                        checkOn={this.state.step3CheckOn}\n                      />\n                    </Card.Description>\n                    <Card.Description>\n                      <Task \n                        text='Bring To Room Temp'\n                        stepTime={this.state.bringRoomTempTime}\n                        numberStep={4}\n                        onPressChild={this.onPress}\n                        timeInfo='1 hour'\n                        checkOn={this.state.step4CheckOn}\n                      />\n                    </Card.Description>\n                    <Card.Description>\n                      <Task \n                        text='More Ingredients'\n                        stepTime={this.state.moreIngredientsTime}\n                        numberStep={5}\n                        onPressChild={this.onPress}\n                        timeInfo='10 minutes'\n                        checkOn={this.state.step5CheckOn}\n                      />\n                    </Card.Description>\n                    <Card.Description>\n                      <Task \n                        text='Rise @ Room Temp'\n                        stepTime={this.state.riseRoomTempTime}\n                        numberStep={6}\n                        onPressChild={this.onPress}\n                        timeInfo='3 hours'\n                        checkOn={this.state.step6CheckOn}\n                      />\n                    </Card.Description>\n                    <Card.Description>\n                      <Task \n                        text='Proof'\n                        stepTime={this.state.proofTime}\n                        numberStep={7}\n                        onPressChild={this.onPress}\n                        timeInfo='1 hour'\n                        checkOn={this.state.step7CheckOn}\n                      />\n                    </Card.Description>\n                    <Card.Description>\n                      <Task \n                        text='Bake'\n                        stepTime={this.state.bakeTime}\n                        numberStep={8}\n                        onPressChild={this.onPress}\n                        timeInfo='30 minutes'\n                        checkOn={this.state.step8CheckOn}\n                      />\n                    </Card.Description>\n                    <Card.Description>\n                      <Task \n                        text='Cool time'\n                        stepTime={this.state.coolTime}\n                        numberStep={9}\n                        onPressChild={this.onPress}\n                        timeInfo='10 minutes'\n                        checkOn={this.state.step9CheckOn}\n                      />\n                    </Card.Description>\n                    <Card.Description>\n                      <Task \n                        text='Done'\n                        stepTime={this.state.doneTime}\n                        numberStep={10}\n                        onPressChild={this.onPress}\n                        timeInfo=''\n                        checkOn={this.state.step10CheckOn}\n                      />\n                    </Card.Description>\n                  </Card.Content>\n                </Card>   \n            </div> \n          </Transition> \n        </div>\n      </div>\n    ); \n  }\n}\n\n\nfunction App() {\n  return (\n    <div>\n      <TimerWindow />\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}